/*
 * This file was generated by the Gradle "init" task.
 */

buildscript {
    ext {
        springBootVersion = "2.1.13.RELEASE"
        springDependencyManagementVersion = "1.0.9.RELEASE"
        springCloudStarterVaultConfigVersion = "2.1.2.RELEASE"
        oracleJdbc6Version = "11.2.0.4"
        log4jdbcLog4j2Version = "1.16"
        freeFairLombokVersion = "5.1.0"
        queryDslVersion = "4.2.1"
        webjarsBootstrapVersion = "4.4.1"
        apacheCommonsEmailVersion = "1.5"
        greenmailVersion = "1.5.13"
    }
}

plugins {
    id "java"
    id "java-library"
    id "org.springframework.boot" version "$springBootVersion"
    id "io.spring.dependency-management" version "$springDependencyManagementVersion"
    id "io.freefair.lombok" version "$freeFairLombokVersion"
}

repositories {
    jcenter()
}

dependencies {
    api (
        "com.querydsl:querydsl-jpa:$queryDslVersion"
    )
    implementation (
        platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion"),
        "org.springframework.boot:spring-boot-starter-data-jpa",
        "org.springframework.boot:spring-boot-starter-thymeleaf",
        "org.springframework.boot:spring-boot-starter-web",
        "org.springframework.boot:spring-boot-starter-mail",
        "org.springframework.cloud:spring-cloud-starter-vault-config:$springCloudStarterVaultConfigVersion",
        "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect",
        "org.flywaydb:flyway-core",
        "com.oracle.database.jdbc:ojdbc6:$oracleJdbc6Version",
        "org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:$log4jdbcLog4j2Version",
        "org.webjars:bootstrap:$webjarsBootstrapVersion",
        "org.apache.commons:commons-lang3",
        "org.apache.commons:commons-email:$apacheCommonsEmailVersion",
        "org.freemarker:freemarker",
        "com.querydsl:querydsl-apt",
        "com.querydsl:querydsl-jpa",
        "com.querydsl:querydsl-sql:$queryDslVersion"
    )
    compileOnly (
        "org.projectlombok:lombok"
    )
    annotationProcessor(
        platform("org.springframework.boot:spring-boot-dependencies:$springBootVersion"),
        "javax.persistence:javax.persistence-api",
        "javax.annotation:javax.annotation-api",
        "org.projectlombok:lombok",
        "com.querydsl:querydsl-apt:$queryDslVersion:jpa"
    )
    runtimeOnly (
        "org.springframework.boot:spring-boot-devtools",
        "com.h2database:h2"
    )
    testImplementation (
        "org.springframework.boot:spring-boot-starter-test",
        "org.junit.jupiter:junit-jupiter-api",
        "org.junit.jupiter:junit-jupiter-params",
        "com.icegreen:greenmail:$greenmailVersion"
    )
    testRuntimeOnly (
        "org.junit.jupiter:junit-jupiter-engine"
    )
}

test {
    useJUnitPlatform()
}

group = "com.cheering-local-restaurant"
version = "1.0.0-SNAPSHOT"
description = "cheering-local-restaurant"
sourceCompatibility = "1.8"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
