/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.1.13.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.1.13.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.1.13.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.1.13.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config:2.1.2.RELEASE'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.3.0'
    implementation 'org.flywaydb:flyway-core:5.2.4'
    implementation 'com.oracle.database.jdbc:ojdbc6:11.2.0.4'
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    implementation 'org.webjars:bootstrap:4.4.1'
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'org.apache.commons:commons-email:1.5'
    implementation 'org.freemarker:freemarker:2.3.29'
    implementation 'com.querydsl:querydsl-apt:4.2.2'
    implementation 'com.querydsl:querydsl-jpa:4.2.2'
    implementation 'com.querydsl:querydsl-sql:4.2.2'
    implementation 'org.junit.jupiter:junit-jupiter-params:5.3.2'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.1.13.RELEASE'
    runtimeOnly 'com.h2database:h2:1.4.200'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.1.13.RELEASE'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
    testImplementation 'com.icegreen:greenmail:1.5.13'
    compileOnly 'org.projectlombok:lombok:1.18.12'
}

group = 'com.cheering-local-restaurant'
version = '1.0.0-SNAPSHOT'
description = 'cheering-local-restaurant'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
